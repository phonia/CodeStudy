using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace Dicrector
{
    /*
     * 建造者模式：将一个复杂对象的建造与他的表示分离，使得同样的建造过程可以建造不同的表示 
     * 我们可以看到，建造者模式与工厂模式是极为相似的，总体上，建造者模式仅仅只比工厂模式多了一个“导演类”的角色。
     * 在建造者模式的类图中，假如把这个导演类看做是最终调用的客户端，那么图中剩余的部分就可以看作是一个简单的工厂模式了。
     * 与工厂模式相比，建造者模式一般用来创建更为复杂的对象， 因为对象的创建过程更为复杂，因此将对象的创建过程独立出来组成一个新的类——导演类。
     * 也就是说，工厂模式是将对象的全部创建过程封装在工厂类中，由工厂 类向客户端提供最终的产品；
     * 而建造者模式中，建造者类一般只提供产品类中各个组件的建造，而将具体建造过程交付给导演类。
     * 由导演类负责将各个组件按照特定 的规则组建为产品，然后将组建好的产品交付给客户端。
     * **/
    class Program
    {
        static void Main(string[] args)
        {
        }
    }
}
